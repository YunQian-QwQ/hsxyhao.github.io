<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hsxyhao.github.io</id>
    <title>Madara</title>
    <updated>2019-12-13T09:42:13.708Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hsxyhao.github.io"/>
    <link rel="self" href="https://hsxyhao.github.io/atom.xml"/>
    <subtitle>这个人很懒，什么都不想写...</subtitle>
    <logo>https://hsxyhao.github.io/images/avatar.png</logo>
    <icon>https://hsxyhao.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, Madara</rights>
    <entry>
        <title type="html"><![CDATA[测试分页9]]></title>
        <id>https://hsxyhao.github.io/post/ce-shi-fen-ye-9</id>
        <link href="https://hsxyhao.github.io/post/ce-shi-fen-ye-9">
        </link>
        <updated>2019-12-13T07:10:59.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[测试分页8]]></title>
        <id>https://hsxyhao.github.io/post/ce-shi-fen-ye-8</id>
        <link href="https://hsxyhao.github.io/post/ce-shi-fen-ye-8">
        </link>
        <updated>2019-12-13T07:10:53.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[测试分页7]]></title>
        <id>https://hsxyhao.github.io/post/ce-shi-fen-ye-7</id>
        <link href="https://hsxyhao.github.io/post/ce-shi-fen-ye-7">
        </link>
        <updated>2019-12-13T07:10:45.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[测试分页6]]></title>
        <id>https://hsxyhao.github.io/post/ce-shi-fen-ye-6</id>
        <link href="https://hsxyhao.github.io/post/ce-shi-fen-ye-6">
        </link>
        <updated>2019-12-13T07:10:36.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[测试分页5]]></title>
        <id>https://hsxyhao.github.io/post/ce-shi-fen-ye-5</id>
        <link href="https://hsxyhao.github.io/post/ce-shi-fen-ye-5">
        </link>
        <updated>2019-12-13T07:10:08.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[测试分页4]]></title>
        <id>https://hsxyhao.github.io/post/ce-shi-fen-ye-4</id>
        <link href="https://hsxyhao.github.io/post/ce-shi-fen-ye-4">
        </link>
        <updated>2019-12-13T07:09:58.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[测试分页3]]></title>
        <id>https://hsxyhao.github.io/post/ce-shi-fen-ye-3</id>
        <link href="https://hsxyhao.github.io/post/ce-shi-fen-ye-3">
        </link>
        <updated>2019-12-13T07:09:50.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[测试分页2]]></title>
        <id>https://hsxyhao.github.io/post/ce-shi-fen-ye-2</id>
        <link href="https://hsxyhao.github.io/post/ce-shi-fen-ye-2">
        </link>
        <updated>2019-12-13T07:09:40.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[测试分页1]]></title>
        <id>https://hsxyhao.github.io/post/ce-shi-fen-ye-1</id>
        <link href="https://hsxyhao.github.io/post/ce-shi-fen-ye-1">
        </link>
        <updated>2019-12-13T07:09:27.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[消息队列学习开篇]]></title>
        <id>https://hsxyhao.github.io/post/xiao-xi-dui-lie-xue-xi-kai-pian</id>
        <link href="https://hsxyhao.github.io/post/xiao-xi-dui-lie-xue-xi-kai-pian">
        </link>
        <updated>2019-12-10T01:20:16.000Z</updated>
        <summary type="html"><![CDATA[<p>什么是消息队列？消息队列有哪些？又解决了哪些问题？该怎么选择消息队列？使用消息队列的时候会遇到哪些问题？带着这些疑问先对消息队列进行初步了解。<br>
<img src="https://hsxyhao.github.io/post-images/1576199469901.png" alt=""></p>
<h1 id="介绍">介绍</h1>
<blockquote>
<p>在计算机科学中，消息队列（英语：Message queue）是一种进程间通信或同一进程的不同线程间的通信方式，软件的贮列用来处理一系列的输入，通常是来自用户。消息队列提供了异步的通信协议，每一个贮列中的纪录包含详细说明的数据，包含发生的时间，输入设备的种类，以及特定的输入参数，也就是说：消息的发送者和接收者不需要同时与消息队列交互。消息会保存在队列中，直到接收者取回它。<br>
一个 WIMP 环境像是 Microsoft Windows，借由优先的某些形式（通常是事件的时间或是重要性的顺序）来存储用户产生的事件到一个 事件贮列 中。系统把每个事件从事件贮列中传递给目标的应用程序。<br>
<a href="https://zh.wikipedia.org/wiki/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97">——摘自维基百科</a></p>
</blockquote>
<p>维基百科中的解释，但是总感觉一大串术语，又是进程又是通信的，还有各种设备什么的。对于小白来说就用最简单的一句话就行了，消息队列就是用来发送和接收消息的<strong>队列</strong>，发送消息方叫作<strong>生产者</strong>，接收消息方叫作<strong>消费者</strong>。</p>
<blockquote>
<p>不要纠结这些专业术语了，我们了解消息队列主要用来业务上的问题的，老是按照专业的角度去理解多费事😜</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<p>什么是消息队列？消息队列有哪些？又解决了哪些问题？该怎么选择消息队列？使用消息队列的时候会遇到哪些问题？带着这些疑问先对消息队列进行初步了解。<br>
<img src="https://hsxyhao.github.io/post-images/1576199469901.png" alt=""></p>
<h1 id="介绍">介绍</h1>
<blockquote>
<p>在计算机科学中，消息队列（英语：Message queue）是一种进程间通信或同一进程的不同线程间的通信方式，软件的贮列用来处理一系列的输入，通常是来自用户。消息队列提供了异步的通信协议，每一个贮列中的纪录包含详细说明的数据，包含发生的时间，输入设备的种类，以及特定的输入参数，也就是说：消息的发送者和接收者不需要同时与消息队列交互。消息会保存在队列中，直到接收者取回它。<br>
一个 WIMP 环境像是 Microsoft Windows，借由优先的某些形式（通常是事件的时间或是重要性的顺序）来存储用户产生的事件到一个 事件贮列 中。系统把每个事件从事件贮列中传递给目标的应用程序。<br>
<a href="https://zh.wikipedia.org/wiki/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97">——摘自维基百科</a></p>
</blockquote>
<p>维基百科中的解释，但是总感觉一大串术语，又是进程又是通信的，还有各种设备什么的。对于小白来说就用最简单的一句话就行了，消息队列就是用来发送和接收消息的<strong>队列</strong>，发送消息方叫作<strong>生产者</strong>，接收消息方叫作<strong>消费者</strong>。</p>
<blockquote>
<p>不要纠结这些专业术语了，我们了解消息队列主要用来业务上的问题的，老是按照专业的角度去理解多费事😜</p>
</blockquote>
]]></content>
    </entry>
</feed>